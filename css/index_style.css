/* inedx_style.css */

/* Voyage style */

.whitebar {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%; 
    height: 18vh; 
    background-color: white; 
    padding: 0 1.5%;
}

.voyagebar {
    min-width: 77.5%;
    max-width: 1200px;
    background-color: #21a9ff; 
    box-shadow: 0px 0px 40px rgba(0, 0, 0, 0.8);
    border-radius: 3%;
    padding: 1.5%;

    display: grid;
    grid-template-columns: repeat(3, 1fr); /* Display in 3 equal columns */
    gap: 4vh; /* Block spacing */

    margin-top: 5vh;
    margin-bottom: 5vh;
    margin-left: auto;
    margin-right: auto;
}

/* Image */

.image_container {
    position: relative;
    width: 100%;
    height: 80vh; 
}

.image_container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 2;
    filter: brightness(92.5%);
}

.text_overlay {
    position: absolute;
    bottom: 24vh; 
    left: 50%;
    transform: translateX(-50%); 
    padding: 1.25%;
    border-radius: 5px;
    display: flex;
    align-items: center;
    gap: 1.25%;
    font-size: 3vh;
}

.text_above {
    position: absolute;
    top: 30%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 2.5%;
    text-align: center;
    width: 80%; 
    font-weight: bold;
    animation: fadeInUp 1.5s;
}

.btn_explorer {
    display: inline-block;
    text-align: center;
    background: orange;
    color: #fff;
    padding: 15px 45px;
    border-radius: 25px;
    text-decoration: none;
    font-weight: bold;
    transition: 0.3s;
    font-size:4vh;
    width: 40vh;
    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.5);
}

.btn_explorer:hover {
    background: darkorange;
}

.btn_explorer:active {
    border: 2.5px solid #ffffff;
}

input {
    width: 100%;
    padding: 8px;
    margin: 8px 0;
    border: 1px solid #ccc;
    border-radius: 5px;
}

input:focus {
    border: 2px solid #21a9ff;
    outline: none;
}

button:hover {
    background: #1a89ce;
}

button:active {
    border: 1px solid #000000;
}

/* Script for login in sign in */

.signin_radio {
    display: flex;
    align-items: center;
    padding: 3vh;
    gap: 1.5rem;
}

/* Animations */

/* Dynamically display the central text bit by bit */
@keyframes fadeInUp {
    0% {
        transform: translate(-50%, 20%);
        opacity: 0;
    }
    100% {
        transform: translate(-50%, -50%);
        opacity: 1;
    }
}


.dark-mode .voyagebar {
    min-width: 77.5%;
    max-width: 1200px;
    background-color: #1f2937; 
    box-shadow: 0px 0px 40px rgba(0, 0, 0, 0.8);
    border-radius: 3%;
    padding: 1.5%;

    display: grid;
    grid-template-columns: repeat(3, 1fr); /* Display in 3 equal columns */
    gap: 4vh; /* Block spacing */

    margin-top: 5vh;
    margin-bottom: 5vh;
    margin-left: auto;
    margin-right: auto;
}

.dark-mode .whitebar {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%; 
    height: 18vh; 
    background-color: #1f2937; 
    padding: 0 1.5%;
}



    
/* Style pour les wrappers de champs */
.input_wrapper {
    position: relative;
    margin-bottom: 15px;
    width: 100%;
}

/* Style pour les champs de saisie */
.overlay_input {
    width: 100%;
    padding: 10px 45px 10px 10px; /* Espace à droite pour le compteur */
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 14px;
    box-sizing: border-box;
}

/* Style spécifique pour les champs avec bouton toggle_password */
.input_wrapper input[type="password"] {
    padding-right: 100px; /* Espace pour le compteur ET le bouton */
}

/* Style pour les compteurs de caractères */
.char_counter {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 12px;
    color: #777;
    pointer-events: none; /* Pour éviter de bloquer les clics sur le champ */
}

/* Style pour les boutons toggle_password */
.toggle_password {
    position: absolute;
    right: 45px; /* Position à droite mais avant le compteur */
    top: 50%;
    transform: translateY(-50%);
    font-size: 12px;
    background: transparent;
    border: none;
    color: #2962ff;
    cursor: pointer;
    padding: 0;
    z-index: 2; /* Pour s'assurer qu'il est au-dessus du champ */
}

/* Ajustement du compteur pour les champs avec bouton */
.input_wrapper:has(button.toggle_password) .char_counter {
    right: 10px;
}

/* Support pour les navigateurs qui ne supportent pas :has */
@supports not (selector(:has(*))) {
    .input_wrapper input[type="password"] ~ .char_counter {
        right: 10px;
    }
}